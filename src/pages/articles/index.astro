---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getTagColor, getFirstTagColor } from '../../utils/colours.js';

interface Frontmatter {
  title: string;
  date: string;
  description: string;
  tags?: string[];
}

interface Post {
  url: string;
  frontmatter: Frontmatter;
}

const allPosts: Post[] = Object.values(
  import.meta.glob<Post>('/src/pages/articles/*.md', { eager: true })
).sort((a, b) => new Date(b.frontmatter.date).getTime() - new Date(a.frontmatter.date).getTime());

// Get a consistent tag order to assign colors
const allTags: string[] = [...new Set(allPosts.flatMap((p) => p.frontmatter.tags || []))];
---

<BaseLayout>
  <section>
    <div class="tags-top">
      {allTags.map((tag) => (
        <a class="tag-inline" href={`/tags/${tag}`} style={`color: ${getTagColor(tag, allTags)};`}>
          {tag}
        </a>
      ))}
    </div>

    <ul class="article-list">
      {allPosts.map((post) => {
        const { title, description, date, tags = [] } = post.frontmatter;
        const color = getFirstTagColor(tags, allTags);

        return (
          <li class="article-item">
            <div class="article-header">
              <a class="article-link" href={post.url} style={`text-decoration: underline; text-decoration-color: ${color}; text-decoration-thickness: 3px; text-underline-offset: 4px;`}>
                {title}
              </a>
              <span class="article-date">{date}</span>
            </div>
            <p class="article-desc">{description}</p>
            <div class="tag-list">
              {tags.map((tag) => (
                <a class="tag-inline" href={`/tags/${tag}`} style={`color: ${getTagColor(tag, allTags)};`}>
                  {tag}
                </a>
              ))}
            </div>
          </li>
        );
      })}
    </ul>
  </section>
</BaseLayout>
