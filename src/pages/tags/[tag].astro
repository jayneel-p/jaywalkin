---
import BaseLayout from "../../layouts/BaseLayout.astro";
import { getTagColor, getFirstTagColor } from "../../utils/colours.js";

// Define interfaces
interface Frontmatter {
  title: string;
  date: string;
  description?: string;
  tags?: string[];
}

interface Post {
  url: string;
  frontmatter: Frontmatter;
}

export async function getStaticPaths() {
  const allPosts = Object.values(
    import.meta.glob<Post>('/src/pages/articles/*.md', { eager: true })
  ).sort((a, b) => new Date(b.frontmatter.date).getTime() - new Date(a.frontmatter.date).getTime());
  
  const allTags = [...new Set(allPosts.flatMap((p) => p.frontmatter.tags || []))];
  
  return allTags.map(tag => ({
    params: { tag },
    props: {
      tag,
      posts: allPosts,
      allTags,
    }
  }));
}

// Props from getStaticPaths
const { tag, posts, allTags } = Astro.props;

// Filter posts by tag
const filteredPosts = posts.filter((p) => p.frontmatter.tags?.includes(tag));

// Get color for the current tag
const tagColor = getTagColor(tag, allTags);
---

<BaseLayout title={`Posts tagged: ${tag}`}>
  <section class="p-4 mx-auto max-w-3xl">
    <h1 class="text-3xl font-bold mb-4" style={`color: ${tagColor}; font-size: 1rem; margin-bottom: 1rem; margin-top: 1rem;`}>
      All Posts With Tag: {tag}
    </h1>
    <ul class="article-list">
      {filteredPosts.map((post) => {
        const { title, date, description, tags = [] } = post.frontmatter;
        return (
          <li class="article-item mb-6">
            <div class="article-header">
              {/** Use first tag's color for underline, consistently */}
              <a href={post.url} class="article-link" style={`border-bottom: 3px solid ${getFirstTagColor(post.frontmatter.tags, allTags)};`}>
                {title}
              </a>
              <span class="article-date ml-4">{date}</span>
            </div>
            {description && <p class="article-desc mt-2">{description}</p>}
            <div class="tag-list mt-1">
              {tags.map((t) => (
                <a class="tag-inline" href={`/tags/${t}`} style={`color: ${getTagColor(t, allTags)};`}>
                  {t}
                </a>
              ))}
            </div>
          </li>
        );
      })}
    </ul>
  </section>
</BaseLayout>