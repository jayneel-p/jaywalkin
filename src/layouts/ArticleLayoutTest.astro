---
import BaseLayout from "../layouts/TestLayout.astro";

// Define interfaces for TypeScript
interface Frontmatter {
  title: string;
  date: string;
  description?: string;
  tags?: string[];
}

interface Post {
  url: string;
  frontmatter: Frontmatter;
}

// Import all posts to get consistent tag colors across pages
const allPosts = Object.values(
  import.meta.glob<Post>('/src/pages/articles/*.md', { eager: true })
);

// Get a consistent tag order to assign colors - same logic as index.astro
const allTags = [...new Set(allPosts.flatMap((p) => p.frontmatter.tags || []))];

const { frontmatter } = Astro.props;

const colorVars = [
  '--accent-yellow',
  '--accent-red',
  '--accent-green',
  '--highlight-purple',
  '--highlight-pink',
  '--highlight-salmon',
  '--highlight-dandelion',
  '--highlight-blue',
  '--highlight-olive',
];
---

<BaseLayout title={frontmatter.title}>
  <article class="prose mx-auto p-4">
    <header class="mb-8">
      <h1 class="text-4xl font-bold mb-2" style="color: var(--text-dark);">
        {frontmatter.title}
      </h1>
      <p style="text-indent: 0px;">
        {frontmatter.date
          ? new Date(frontmatter.date).toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })
          : 'Date not available'}
      </p>
      {frontmatter.description && (
        <p style ="font-size: 0.95rem; color: var(--text-dark); margin-top: 1rem; text-indent: 0px;">
          <i>{frontmatter.description}</i>
        </p>
      )}
       
       {frontmatter.tags && (
        <div class="tag-list mt-2">
          {frontmatter.tags.map((tag: string) => {
            const tagIndex = allTags.indexOf(tag);
            const colorVar = tagIndex >= 0
              ? colorVars[tagIndex % colorVars.length]
              : '--highlight-olive';
            return (
              <a href={`/tags/${tag}`} class="tag-inline" style={`color: var(${colorVar});`}>
                {tag}
              </a>
            );
          })}
        </div>
      )}

    </header>
    <div class="article-content">
      <slot />
    </div>
  </article>
</BaseLayout>