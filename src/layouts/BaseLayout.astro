---
import "../styles/backup.css";
import Navbar from "../comps/Navbar.astro";
// Get the title from props with a default value
const { title = "jaywalking" } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>{title}</title>
  <!-- KaTeX styling -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/contrib/auto-render.min.css">
  <!-- Optional: Add custom fonts for code blocks -->
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/jetbrains-mono@1.0.6/css/jetbrains-mono.min.css">
  <!-- KaTeX scripts -->
  <script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.js"></script>
  <script defer src="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/contrib/auto-render.min.js"
  onload="renderMathInElement(document.body, 
      { delimiters: [{left: '$$', right: '$$', display: true},
      {left: '$', right: '$', display: false}] })">
      </script>
</head>

<body>
  <header class="header">
    <div class="header-top">
      <div class="title-wrapper">
        <a href="/" class="site-title"> jaywalking </a>
      </div>
      <Navbar />
    </div>
    <h2 class="subheader"> </h2> 
  </header>
  <main>
    <slot />
  </main>
<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Get CSS variables from the document
    const rootStyles = getComputedStyle(document.documentElement);
    const colors = [
      rootStyles.getPropertyValue('--colour-tag1').trim(),
      rootStyles.getPropertyValue('--colour-tag2').trim(),
      rootStyles.getPropertyValue('--colour-tag3').trim(),
      rootStyles.getPropertyValue('--colour-tag4').trim(),
      rootStyles.getPropertyValue('--colour-tag5').trim(),
      rootStyles.getPropertyValue('--colour-tag6').trim()
    ];
    
    const bolds = document.querySelectorAll('b');
    bolds.forEach(b => {
      const color = colors[Math.floor(Math.random() * colors.length)];
      b.style.color = color;
    });
  });
</script>
</body>
</html>