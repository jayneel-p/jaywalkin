---
import BaseLayout from "../layouts/BaseLayout.astro";
import { getTagColor, getFirstTagColor } from "../utils/colours.js";
import "../styles/toc.css"; // Import TOC styles

// Define interfaces for TypeScript
interface Frontmatter {
  title: string;
  date: string;
  description?: string;
  tags?: string[];
}

interface Post {
  url: string;
  frontmatter: Frontmatter;
}

// Import all posts to get consistent tag colors across pages
const allPosts = Object.values(
  import.meta.glob<Post>('/src/pages/articles/*.md', { eager: true })
).sort((a, b) => new Date(b.frontmatter.date).getTime() - new Date(a.frontmatter.date).getTime());

// Get a consistent tag order to assign colors - same logic as index.astro
const allTags = [...new Set(allPosts.flatMap((p) => p.frontmatter.tags || []))];

const { frontmatter } = Astro.props;

const tagColor = getFirstTagColor(frontmatter.tags, allTags);

// Define secondary color for TOC that avoids the primary tag color
const colors = [
  'var(--colour-tag4)', // red
  'var(--colour-tag5)', // blue  
  'var(--colour-tag2)', // orange
  'var(--colour-tag6)', // purple
  'var(--colour-tag3)', // green
  'var(--colour-tag1)'  // yellow
];

// Find a color that's different from the primary tag color
const secondaryColor = colors.find(color => color !== tagColor) || 'var(--colour-tag4)';
---

<BaseLayout title={frontmatter.title}>
  <article class="prose mx-auto p-4" style={`--article-accent-color: ${tagColor}; --toc-secondary-color: ${secondaryColor};`}>
    <header class="mb-8">
      <h1   
        class="text-4xl font-bold mb-2 inline-block"
        style={`color: var(--colour-text); text-decoration: underline; text-decoration-color: ${tagColor}; text-decoration-thickness: 3px; text-underline-offset: 7px;`}>
        {frontmatter.title}
      </h1>
      <p style="text-indent: 0px;">
        {frontmatter.date
          ? new Date(frontmatter.date).toLocaleDateString('en-US', {
              year: 'numeric',
              month: 'long',
              day: 'numeric'
            })
          : 'Date not available'}
      </p>
      {frontmatter.description && (
        <p style="font-size: 0.95rem; color: var(--colour-text-muted); margin-top: 1rem; text-indent: 0px;">
          <i>{frontmatter.description}</i>
        </p>
      )}
       
      {frontmatter.tags && (
        <div class="tag-list mt-2">
          {frontmatter.tags.map((tag: string) => (
            <a href={`/tags/${tag}`} class="tag-inline" style={`color: ${getTagColor(tag, allTags)};`}>
              {tag}
            </a>
          ))}
        </div>
      )}
    </header>
    <div class="article-content">
      <slot />
    </div>
  </article>
</BaseLayout>