---
import "../styles/globals.css";
import Navbar from "../components/Navbar.astro";

const { frontmatter, title, allTags = [] } = Astro.props;

const colorVars = [
  '--accent-yellow',
  '--accent-red',
  '--accent-green',
  '--highlight-purple',
  '--highlight-pink',
  '--highlight-salmon',
  '--highlight-dandelion',
  '--highlight-blue',
  '--highlight-olive',
];
---

<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>{title}</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css" />
</head>
<body>
  <header class="header">
    <div class="header-top">
      <div class="title-wrapper">
        <a href="/" class="site-title">jaywalkin'</a>
      </div>
      <Navbar />
    </div>
  </header>

  <main class="article">
    <article class="prose mx-auto p-4">
      <header class="mb-8">
        <h1 class="text-4xl font-bold mb-2" style="color: var(--text-black);">
          {frontmatter.title}
        </h1>
        <p class="text-gray-500">
          {frontmatter.date
            ? new Date(frontmatter.date).toLocaleDateString('en-US', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
              })
            : 'Date not available'}
        </p>

        {frontmatter.tags && (
          <p class="mt-2">
            Tags:{" "}
            {frontmatter.tags.map((tag: string, index: number) => {
              const tagIndex = allTags.indexOf(tag);
              const colorVar = tagIndex >= 0
                ? colorVars[tagIndex % colorVars.length]
                : '--highlight-olive';
              return (
                <span
                  class="tag-highlight"
                  style={`background-color: var(${colorVar})33; color: var(${colorVar});`}
                >
                  {tag}
                </span>
              );
            })}
          </p>
        )}
      </header>

      <div class="article-content">
        <slot />
      </div>
    </article>
  </main>
</body>
</html>